--- a/CMakeLists.txt	 2018-05-26 17:40:53.000000000 +0200
+++ b/CMakeLists.txt_new 2018-09-13 21:09:57.857617641 +0200
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.0)
+cmake_minimum_required(VERSION 2.8)
 
 # set project name from current directory
 get_filename_component(BASENAME ${CMAKE_SOURCE_DIR} NAME)
@@ -44,7 +44,8 @@
 if (NOT V4L2WRAPPER_LIBRARY)
         message(STATUS "Installing v4l2wrapper")
         EXEC_PROGRAM("mkdir -p ${CMAKE_STAGING_PREFIX}/include/libv4l2cpp && mkdir -p ${CMAKE_STAGING_PREFIX}/lib")
-        EXEC_PROGRAM("git submodule init && git submodule update && make -C v4l2wrapper CC=${CMAKE_C_COMPILER} PREFIX=${CMAKE_STAGING_PREFIX} all install")
+# git submodule init && git submodule update
+        EXEC_PROGRAM("git clone https://github.com/mpromonet/libv4l2cpp.git v4l2wrapper && make -C v4l2wrapper CC=${CMAKE_C_COMPILER} PREFIX=${CMAKE_STAGING_PREFIX} all install")
 	find_library(V4L2WRAPPER_LIBRARY libv4l2wrapper.a)
         message(STATUS "v4l2wrapper built in V4L2WRAPPER_LIBRARY=${V4L2WRAPPER_LIBRARY}")	
 endif (NOT V4L2WRAPPER_LIBRARY)
@@ -79,28 +80,38 @@
 
 
 # live555
-find_path(LIBLIVE555_INCLUDE_DIR liveMedia/liveMedia.hh)
-if (NOT LIBLIVE555_INCLUDE_DIR)
-        message(STATUS "Installing live555")
-        EXEC_PROGRAM("wget http://www.live555.com/liveMedia/public/live555-latest.tar.gz -O - | tar xzf -")
-        EXEC_PROGRAM("cd live && ./genMakefiles linux-gdb && make CPLUSPLUS_COMPILER=${CMAKE_CXX_COMPILER} C_COMPILER=${CMAKE_C_COMPILER} LINK='${CMAKE_CXX_COMPILER} -o' CPPFLAGS=-DALLOW_RTSP_SERVER_PORT_REUSE=1 PREFIX=${CMAKE_STAGING_PREFIX} install")
-else (NOT LIBLIVE555_INCLUDE_DIR)
-	SET(CPACK_DEBIAN_PACKAGE_DEPENDS ${CPACK_DEBIAN_PACKAGE_DEPENDS}liblivemedia-dev,)
-endif (NOT LIBLIVE555_INCLUDE_DIR)
+#find_path(LIBLIVE555_INCLUDE_DIR liveMedia/liveMedia.hh)
+#if (NOT LIBLIVE555_INCLUDE_DIR)
+#        message(STATUS "Installing live555")
+#        EXEC_PROGRAM("wget http://www.live555.com/liveMedia/public/live555-latest.tar.gz -O - | tar xzf -")
+#        EXEC_PROGRAM("cd live && ./genMakefiles linux-gdb && make CPLUSPLUS_COMPILER=${CMAKE_CXX_COMPILER} C_COMPILER=${CMAKE_C_COMPILER} LINK='${CMAKE_CXX_COMPILER} -o' CPPFLAGS=-DALLOW_RTSP_SERVER_PORT_REUSE=1 PREFIX=${CMAKE_STAGING_PREFIX} install")
+#else (NOT LIBLIVE555_INCLUDE_DIR)
+#	SET(CPACK_DEBIAN_PACKAGE_DEPENDS ${CPACK_DEBIAN_PACKAGE_DEPENDS}liblivemedia-dev,)
+#endif (NOT LIBLIVE555_INCLUDE_DIR)
 
-find_path(LIBLIVE555_INCLUDE_DIR liveMedia/liveMedia.hh)
+#find_path(LIBLIVE555_INCLUDE_DIR liveMedia/liveMedia.hh)
+set(LIBLIVE555_INCLUDE_DIR "/home/vm2/mipsel_uclibc_toolchain/openfang/_build/buildroot-2014.08/output/target/usr/local/include")
 foreach (LIBLIVE555_module groupsock liveMedia UsageEnvironment BasicUsageEnvironment)
 	include_directories(${LIBLIVE555_INCLUDE_DIR}/${LIBLIVE555_module}) 
 endforeach (LIBLIVE555_module)
 
-set(LIBLIVE555_LIBRARIES "")
-foreach (LIBLIVE555_module groupsock liveMedia UsageEnvironment BasicUsageEnvironment)
-	find_library( ${LIBLIVE555_module}_LIBRARY ${LIBLIVE555_module} )
-	if ( ${LIBLIVE555_module}_LIBRARY )
-		set(LIBLIVE555_LIBRARIES ${LIBLIVE555_LIBRARIES} ${${LIBLIVE555_module}_LIBRARY})
-	endif ( ${LIBLIVE555_module}_LIBRARY )
-endforeach (LIBLIVE555_module)
-target_link_libraries(${PROJECT_NAME} ${LIBLIVE555_LIBRARIES})
+#set(LIBLIVE555_LIBRARIES "")
+#foreach (LIBLIVE555_module groupsock liveMedia UsageEnvironment BasicUsageEnvironment)
+#	find_library( ${LIBLIVE555_module}_LIBRARY ${LIBLIVE555_module} )
+#	if ( ${LIBLIVE555_module}_LIBRARY )
+#		set(LIBLIVE555_LIBRARIES ${LIBLIVE555_LIBRARIES} ${${LIBLIVE555_module}_LIBRARY})
+#	endif ( ${LIBLIVE555_module}_LIBRARY )
+#endforeach (LIBLIVE555_module)
+#target_link_libraries(${PROJECT_NAME} ${LIBLIVE555_LIBRARIES})
+
+target_link_libraries(${PROJECT_NAME} "/home/vm2/mipsel_uclibc_toolchain/openfang/_build/buildroot-2014.08/output/target/usr/local/lib/libgroupsock.a")
+target_link_libraries(${PROJECT_NAME} "/home/vm2/mipsel_uclibc_toolchain/openfang/_build/buildroot-2014.08/output/target/usr/local/lib/libliveMedia.a")
+target_link_libraries(${PROJECT_NAME} "/home/vm2/mipsel_uclibc_toolchain/openfang/_build/buildroot-2014.08/output/target/usr/local/lib/libUsageEnvironment.a")
+target_link_libraries(${PROJECT_NAME} "/home/vm2/mipsel_uclibc_toolchain/openfang/_build/buildroot-2014.08/output/target/usr/local/lib/libBasicUsageEnvironment.a")
+
+
+
+
 
 #testing
 enable_testing()
